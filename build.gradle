plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'animealth'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

//jar파일 이름 지정 build -> libs에 있어요~
bootJar{
	archivesBaseName = 'animealth'
	archiveFileName = 'animealth.jar'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//추가적으로 아직 사용하지 않는 시큐리티 관련된 라이브러리 & 프레임워크 주석처리 해뒀어요 풀어 사용하세요 레디스도 있음
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	//test 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
	testImplementation 'org.assertj:assertj-core:3.17.2'
	testImplementation 'org.mockito:mockito-core:3.5.13'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
